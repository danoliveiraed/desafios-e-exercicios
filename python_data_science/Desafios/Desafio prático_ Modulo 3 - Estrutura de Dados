{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNSZa42nQ8hFiw7CmKGEhUk"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Aquecimento"],"metadata":{"id":"RGzBIFQGw4np"}},{"cell_type":"markdown","source":["1. Crie um código para imprimir a soma dos elementos de cada uma das listas contidas na seguinte lista:\n","\n","lista_de_listas = [[4,6,5,9], [1,0,7,2], [3,4,1,8]]\n","Copiar código\n","2. Crie um código para gerar uma lista que armazena o terceiro elemento de cada tupla contida na seguinte lista de tuplas:\n","\n","lista_de_tuplas = [('Pedro', 1.74, 81), ('Júlia', 1.65, 67), ('Otávio', 1.81, 83)]\n","Copiar código\n","3. A partir da lista: lista = ['Pedro', 'Júlia', 'Otávio', 'Eduardo'], crie um código para gerar uma lista de tuplas em que cada tupla tenha o primeiro elemento como a posição do nome na lista original e o segundo elemento sendo o próprio nome.\n","\n","4. Crie uma lista usando o list comprehension que armazena somente o valor numérico de cada tupla caso o primeiro elemento seja 'Apartamento', a partir da seguinte lista de tuplas:\n","\n","aluguel = [('Apartamento', 1700), ('Apartamento', 1400), ('Casa', 2150), ('Apartamento', 1900), ('Casa', 1100)]\n","Copiar código\n","5. Crie um dicionário usando o dict comprehension em que as chaves estão na lista meses = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'] e os valores estão em despesa = [860, 490, 1010, 780, 900, 630, 590, 770, 620, 560, 840, 360].\n","\n"],"metadata":{"id":"TlsGbkb9w-lV"}},{"cell_type":"markdown","source":["1."],"metadata":{"id":"5cyfLXu3xEjg"}},{"cell_type":"code","execution_count":5,"metadata":{"id":"KOt_asnrw1C9","executionInfo":{"status":"ok","timestamp":1745414546753,"user_tz":180,"elapsed":16,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}}},"outputs":[],"source":["lista_de_listas = [[4,6,5,9], [1,0,7,2], [3,4,1,8]]"]},{"cell_type":"code","source":["soma  = [sum(lista) for lista in lista_de_listas]\n","soma"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7rqRXBoKxDEH","executionInfo":{"status":"ok","timestamp":1745415631784,"user_tz":180,"elapsed":7,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"b0008e5a-0f89-41a7-8952-c58ccc00f3eb"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[24, 10, 16]"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["2."],"metadata":{"id":"uGntF4KY0TlL"}},{"cell_type":"code","source":["lista_de_tuplas = [('Pedro', 1.74, 81), ('Júlia', 1.65, 67), ('Otávio', 1.81, 83)]"],"metadata":{"id":"kN53rxm2zJq8","executionInfo":{"status":"ok","timestamp":1745414643882,"user_tz":180,"elapsed":31,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["armazem = [listas[2] for listas in lista_de_tuplas]\n","print(armazem)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1vrmV4330fUm","executionInfo":{"status":"ok","timestamp":1745415634032,"user_tz":180,"elapsed":41,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"53bce896-900d-4fd8-c465-a1d21048590e"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["[81, 67, 83]\n"]}]},{"cell_type":"markdown","source":["3."],"metadata":{"id":"UBrk-MAM4Qvv"}},{"cell_type":"code","source":["lista = ['Pedro', 'Júlia', 'Otávio', 'Eduardo']"],"metadata":{"id":"snpmnsrQ08aH","executionInfo":{"status":"ok","timestamp":1745417690104,"user_tz":180,"elapsed":28,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["tupla = [(lista.index(nome), nome) for nome in lista]\n","tupla"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aH8kLn2x-uxY","executionInfo":{"status":"ok","timestamp":1745417805113,"user_tz":180,"elapsed":15,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"5d64287e-d605-4ea3-82f8-bd508a99e935"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(0, 'Pedro'), (1, 'Júlia'), (2, 'Otávio'), (3, 'Eduardo')]"]},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","source":["4."],"metadata":{"id":"9Z6IccYBAniy"}},{"cell_type":"code","source":["aluguel = [('Apartamento', 1700), ('Apartamento', 1400), ('Casa', 2150), ('Apartamento', 1900), ('Casa', 1100)]\n","##somente o valor númerico de apartamento"],"metadata":{"id":"YXuwm2ktAIdT","executionInfo":{"status":"ok","timestamp":1745417942426,"user_tz":180,"elapsed":6,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["num_ap = [tup[1] for tup in aluguel if tup[0] == 'Apartamento']\n","num_ap"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZSvgWdOiBCPs","executionInfo":{"status":"ok","timestamp":1745418021237,"user_tz":180,"elapsed":35,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"6782ff3a-9f0e-4bc9-e6ef-daa3b41c3600"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1700, 1400, 1900]"]},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","source":["5."],"metadata":{"id":"z2y5M1qqBcBT"}},{"cell_type":"code","source":["#meses como chave\n","meses = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez']\n","#valor enquanto despesa\n","despesa = [860, 490, 1010, 780, 900, 630, 590, 770, 620, 560, 840, 360]"],"metadata":{"id":"ZLC4h4xSBU4i","executionInfo":{"status":"ok","timestamp":1745418108955,"user_tz":180,"elapsed":7,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["compilado = {meses[i]: despesa[i] for i in range(len(despesa))}\n","compilado"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-jyritbNBlsB","executionInfo":{"status":"ok","timestamp":1745418407045,"user_tz":180,"elapsed":7,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"148b20a8-57be-4db9-b4da-16c2514a8132"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Jan': 860,\n"," 'Fev': 490,\n"," 'Mar': 1010,\n"," 'Abr': 780,\n"," 'Mai': 900,\n"," 'Jun': 630,\n"," 'Jul': 590,\n"," 'Ago': 770,\n"," 'Set': 620,\n"," 'Out': 560,\n"," 'Nov': 840,\n"," 'Dez': 360}"]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","source":["# Aplicando a projetos"],"metadata":{"id":"8cYYMUUDC9AI"}},{"cell_type":"markdown","source":["6. Uma loja possui um banco de dados com a informação de venda de cada representante e de cada ano e precisa filtrar somente os dados do ano 2022 com venda maior do que 6000. A loja forneceu uma amostra contendo apenas as colunas com os anos e os valores de venda para que você ajude a realizar a filtragem dos dados a partir de um código:\n","\n","vendas = [('2023', 4093), ('2021', 4320), ('2021', 5959), ('2022', 8883), ('2023', 9859), ('2022', 5141), ('2022', 7688), ('2022', 9544), ('2023', 4794), ('2021', 7178), ('2022', 3030), ('2021', 7471), ('2022', 4226), ('2022', 8190), ('2021', 9680), ('2022', 5616)]\n","Copiar código\n","Crie uma lista usando list comprehension para filtrar os valores de 2022 e que sejam maiores que 6000.\n","\n","7. Uma clínica analisa dados de pacientes e armazena o valor numérico da glicose em um banco de dados e gostaria de rotular os dados da seguinte maneira:\n","\n","Glicose igual ou inferior a 70: 'Hipoglicemia'\n","Glicose entre 70 a 99: 'Normal'\n","Glicose entre 100 e 125: 'Alterada'\n","Glicose superior a 125: 'Diabetes'\n","A clínica disponibilizou parte dos valores e sua tarefa é criar uma lista de tuplas usando list comprehension contendo o rótulo e o valor da glicemia em cada tupla.\n","\n","glicemia = [129, 82, 60, 97, 101, 65, 62, 167, 87, 53, 58, 92, 66, 120, 109, 62, 86, 96, 103, 88, 155, 52, 89, 73]\n","Copiar código\n","8. Um e-commerce possui as informações de id de venda, quantidade vendida e preço do produto divididos nas seguintes listas:\n","\n","id = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n","quantidade = [15, 12, 1, 15, 2, 11, 2, 12, 2, 4]\n","preco = [93.0, 102.0, 18.0, 41.0, 122.0, 14.0, 71.0, 48.0, 14.0, 144.0]\n","Copiar código\n","O e-commerce precisa estruturar esses dados em uma tabela contendo o valor total da venda, que é obtida multiplicando a quantidade pelo preço unitário. Além disso, a tabela precisa conter um cabeçalho indicando as colunas: 'id', 'quantidade', 'preco' e 'total'.\n","\n","Crie uma lista de tuplas em que cada tupla tenha id, quantidade, preço e valor total, na qual a primeira tupla é o cabeçalho da tabela.\n","\n","9. Uma empresa possui filiais espalhadas nos Estados da região Sudeste do Brasil. Em uma das tabelas de cadastro das filiais há uma coluna contendo a informação de qual é o Estado a que pertence: estados = ['SP', 'ES', 'MG', 'MG', 'SP', 'MG', 'ES', 'ES', 'ES', 'SP', 'SP', 'MG', 'ES', 'SP', 'RJ', 'MG', 'RJ', 'SP', 'MG', 'SP', 'ES', 'SP', 'MG'].\n","\n","A empresa sempre está abrindo novas filiais, de modo que a tabela está constantemente recebendo novos registros e o gestor gostaria de possuir a informação atualizada da quantidade de filiais em cada Estado.\n","\n","A partir da coluna com a informação dos Estados, crie um dicionário usando dict comprehension com a chave sendo o nome de um Estado e o valor sendo a contagem de vezes em que o Estado aparece na lista.\n","\n","Dica: Você pode fazer um passo intermediário para gerar uma lista de listas em que cada uma das listas possui o nome de apenas um Estado com valores repetidos.\n","\n","10. Nessa mesma tabela de cadastro de filiais, há uma coluna com as informações da quantidade de pessoas colaboradoras e o(a) gestor(a) gostaria de ter um agrupamento da soma dessas pessoas para cada estado. As informações contidas na tabela são:\n","\n","funcionarios = [('SP', 16), ('ES', 8), ('MG', 9), ('MG', 6), ('SP', 10), ('MG', 4), ('ES',9), ('ES', 7), ('ES', 12), ('SP', 7), ('SP', 11), ('MG',8), ('ES',8), ('SP',9), ('RJ', 13), ('MG', 5), ('RJ', 9), ('SP', 12), ('MG', 10), ('SP', 7), ('ES', 14), ('SP', 10), ('MG', 12)]\n","Copiar código\n","A partir da lista de tuplas, crie um dicionário em que as chaves são os nomes dos Estados únicos e os valores são as listas com o número de colaboradores(as) referentes ao Estado. Crie também um dicionário em que as chaves são os nomes dos Estados e os valores são a soma de colaboradores(as) por Estado.\n","\n"],"metadata":{"id":"ccYVaJuODFfl"}},{"cell_type":"markdown","source":["6."],"metadata":{"id":"cTK4u-MDDIx8"}},{"cell_type":"code","source":["vendas = [('2023', 4093), ('2021', 4320), ('2021', 5959), ('2022', 8883), ('2023', 9859), ('2022', 5141), ('2022', 7688), ('2022', 9544), ('2023', 4794), ('2021', 7178), ('2022', 3030), ('2021', 7471), ('2022', 4226), ('2022', 8190), ('2021', 9680), ('2022', 5616)]"],"metadata":{"id":"RBvkwoOgCHZm","executionInfo":{"status":"ok","timestamp":1745419119934,"user_tz":180,"elapsed":47,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["vendas_22 = [venda[1] for venda in vendas if venda[0] == '2022' and venda[1] >= 6000]\n","vendas_22\n","# [exp for item in lista if cond]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h-P1Ys3IFjhD","executionInfo":{"status":"ok","timestamp":1745419855831,"user_tz":180,"elapsed":52,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"4c273a80-c3c0-419c-83e6-addb953fc6eb"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[8883, 7688, 9544, 8190]"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":[],"metadata":{"id":"dIfJpy_uGNd_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["7."],"metadata":{"id":"MJO_WPutIahX"}},{"cell_type":"code","source":["def glicemias(lista:list):\n","  val_glicemia = [[('Hipoglicemia', gli) if gli <= 70 else ('Normal', gli) if 99 >= gli > 70 else ('Alterada', gli) if 125>= gli > 99 else ('Diabetes', gli) for gli in lista]]\n","#[resultado_if if cond else resultado_else for item in lista]\n","  return val_glicemia"],"metadata":{"id":"69mpTQ-GIwuZ","executionInfo":{"status":"ok","timestamp":1745421903759,"user_tz":180,"elapsed":4,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}}},"execution_count":86,"outputs":[]},{"cell_type":"code","source":["glicemia = [129, 82, 60, 97, 101, 65, 62, 167, 87, 53, 58, 92, 66, 120, 109, 62, 86, 96, 103, 88, 155, 52, 89, 73]\n","resultado = glicemias(glicemia)\n","resultado"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OIszUkOhIcZM","executionInfo":{"status":"ok","timestamp":1745421906155,"user_tz":180,"elapsed":6,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"466898e8-438e-44f8-df4b-12ade019991d"},"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[('Diabetes', 129),\n","  ('Normal', 82),\n","  ('Hipoglicemia', 60),\n","  ('Normal', 97),\n","  ('Alterada', 101),\n","  ('Hipoglicemia', 65),\n","  ('Hipoglicemia', 62),\n","  ('Diabetes', 167),\n","  ('Normal', 87),\n","  ('Hipoglicemia', 53),\n","  ('Hipoglicemia', 58),\n","  ('Normal', 92),\n","  ('Hipoglicemia', 66),\n","  ('Alterada', 120),\n","  ('Alterada', 109),\n","  ('Hipoglicemia', 62),\n","  ('Normal', 86),\n","  ('Normal', 96),\n","  ('Alterada', 103),\n","  ('Normal', 88),\n","  ('Diabetes', 155),\n","  ('Hipoglicemia', 52),\n","  ('Normal', 89),\n","  ('Normal', 73)]]"]},"metadata":{},"execution_count":87}]},{"cell_type":"markdown","source":["8."],"metadata":{"id":"uTLKfERJIb7n"}},{"cell_type":"code","source":["id = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n","quantidade = [15, 12, 1, 15, 2, 11, 2, 12, 2, 4]\n","preco = [93.0, 102.0, 18.0, 41.0, 122.0, 14.0, 71.0, 48.0, 14.0, 144.0]\n","total = []\n","cabecalho = ['id', 'quantidade', 'preco', 'total']\n"],"metadata":{"id":"YuTHWeiZQaF0","executionInfo":{"status":"ok","timestamp":1745422121780,"user_tz":180,"elapsed":4,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}}},"execution_count":89,"outputs":[]},{"cell_type":"code","source":["total = [ preco[i] * quantidade[i] for i in range(len(preco))]\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SeJLeng_Q15Z","executionInfo":{"status":"ok","timestamp":1745422237191,"user_tz":180,"elapsed":16,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"365034b7-27f2-45ee-db7f-586ecbb5bbbb"},"execution_count":91,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1395.0, 1224.0, 18.0, 615.0, 244.0, 154.0, 142.0, 576.0, 28.0, 576.0]"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["ecommerce = [tuple(cabecalho), tuple(id), tuple(quantidade), tuple(preco), tuple(total)]\n","ecommerce"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NOpAj-IgRa0l","executionInfo":{"status":"ok","timestamp":1745422624541,"user_tz":180,"elapsed":14,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"2617010f-d23c-4356-fa60-25a582de59ea"},"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('id', 'quantidade', 'preco', 'total'),\n"," (0, 1, 2, 3, 4, 5, 6, 7, 8, 9),\n"," (15, 12, 1, 15, 2, 11, 2, 12, 2, 4),\n"," (93.0, 102.0, 18.0, 41.0, 122.0, 14.0, 71.0, 48.0, 14.0, 144.0),\n"," (1395.0, 1224.0, 18.0, 615.0, 244.0, 154.0, 142.0, 576.0, 28.0, 576.0)]"]},"metadata":{},"execution_count":98}]},{"cell_type":"markdown","source":["9."],"metadata":{"id":"IvIBxHplTBos"}},{"cell_type":"code","source":["estados = ['SP', 'ES', 'MG', 'MG', 'SP', 'MG', 'ES', 'ES', 'ES', 'SP', 'SP', 'MG', 'ES', 'SP', 'RJ', 'MG', 'RJ', 'SP', 'MG', 'SP', 'ES', 'SP', 'MG']"],"metadata":{"id":"gRTIn1tHRzeU","executionInfo":{"status":"ok","timestamp":1745422735197,"user_tz":180,"elapsed":8,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}}},"execution_count":99,"outputs":[]},{"cell_type":"code","source":["d_estados_qtd = {estado: estados.count(estado) for estado in estados}\n","d_estados_qtd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MrwkpygqWRXs","executionInfo":{"status":"ok","timestamp":1745423610399,"user_tz":180,"elapsed":8,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"869afca7-686b-400c-9427-15bcfa530a66"},"execution_count":101,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'SP': 8, 'ES': 6, 'MG': 7, 'RJ': 2}"]},"metadata":{},"execution_count":101}]},{"cell_type":"markdown","source":["10."],"metadata":{"id":"useET2ISWxdH"}},{"cell_type":"code","source":["funcionarios = [('SP', 16), ('ES', 8), ('MG', 9), ('MG', 6), ('SP', 10), ('MG', 4), ('ES',9), ('ES', 7), ('ES', 12), ('SP', 7), ('SP', 11), ('MG',8), ('ES',8), ('SP',9), ('RJ', 13), ('MG', 5), ('RJ', 9), ('SP', 12), ('MG', 10), ('SP', 7), ('ES', 14), ('SP', 10), ('MG', 12)]"],"metadata":{"id":"kHYSqhEAWo1a","executionInfo":{"status":"ok","timestamp":1745426089794,"user_tz":180,"elapsed":3,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}}},"execution_count":123,"outputs":[]},{"cell_type":"code","source":["# estado como chave e todos os valores de cada estado como elementos\n","estado_qtd = {}\n","\n","for estado, qtd in funcionarios:\n","  if estado not in estado_qtd:\n","    estado_qtd[estado] = [qtd]\n","  else:\n","    estado_qtd[estado].append(qtd)\n","estado_qtd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rdTIG6cdXF_q","executionInfo":{"status":"ok","timestamp":1745426932600,"user_tz":180,"elapsed":23,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"7dc128bd-0cdb-4917-be7e-96b309e5ed61"},"execution_count":131,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'SP': [16, 10, 7, 11, 9, 12, 7, 10],\n"," 'ES': [8, 9, 7, 12, 8, 14],\n"," 'MG': [9, 6, 4, 8, 5, 10, 12],\n"," 'RJ': [13, 9]}"]},"metadata":{},"execution_count":131}]},{"cell_type":"code","source":["estado_soma = {chave: sum(listas) for chave, listas in estado_qtd.items()}\n","estado_soma"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c0jsTFMriewA","executionInfo":{"status":"ok","timestamp":1745427327269,"user_tz":180,"elapsed":22,"user":{"displayName":"Dan Oliveira","userId":"02435096724921894040"}},"outputId":"eb531bf1-c02b-4e1d-b795-2686a16c1b2e"},"execution_count":138,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'SP': 82, 'ES': 58, 'MG': 54, 'RJ': 22}"]},"metadata":{},"execution_count":138}]}]}